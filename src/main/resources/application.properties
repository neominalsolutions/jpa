# Postgres Bağlantısı

# spring.datasource.url= jdbc:postgresql://localhost:5432/apidb
# spring.datasource.username= postgres
# spring.datasource.password= admin
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
# spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
# # Hibernate ddl auto (create, create-drop, validate, update)
# spring.jpa.hibernate.ddl-auto= none

# yazdığımız entityler entitymanager üzerinden veri tabanında her bir model güncellemesinde yansır. update komutu kullanıyoruz.

# varolan bir db varsa none // db first
# db tableları modelden oluşturursak update seçilmeldir. // code first

server.port = 5000

spring.datasource.driver-class-name= com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.url= jdbc:sqlserver://localhost;encrypt=true;trustServerCertificate=true;databaseName=Northwind;
spring.datasource.username= sa
spring.datasource.password= 1234
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.SQLServerDialect
spring.jpa.hibernate.ddl-auto= none
spring.jpa.show-sql=true
# sorgu sonuçları Hibernate formatında console yanır
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.open-in-view = true

